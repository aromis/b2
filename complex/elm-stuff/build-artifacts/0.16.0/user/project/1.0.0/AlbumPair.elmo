Elm.AlbumPair = Elm.AlbumPair || {};
Elm.AlbumPair.make = function (_elm) {
   "use strict";
   _elm.AlbumPair = _elm.AlbumPair || {};
   if (_elm.AlbumPair.values) return _elm.AlbumPair.values;
   var _U = Elm.Native.Utils.make(_elm),
   $AlbumEntry = Elm.AlbumEntry.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var _op = {};
   var ex2 = $AlbumEntry.init("In the Garden Green");
   var ex1 = $AlbumEntry.init("Back in Black");
   var examples = {topEntry: ex1,bottomEntry: ex2};
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "Hi") {
            var _p1 = _p0._1;
            return _U.update(model,
            {topEntry: A2($AlbumEntry.update,_p1,model.topEntry),bottomEntry: A2($AlbumEntry.update,$Basics.not(_p1),model.bottomEntry)});
         } else {
            var _p2 = _p0._1;
            return _U.update(model,
            {bottomEntry: A2($AlbumEntry.update,_p2,model.bottomEntry),topEntry: A2($AlbumEntry.update,$Basics.not(_p2),model.topEntry)});
         }
   });
   var Lo = F2(function (a,b) {    return {ctor: "Lo",_0: a,_1: b};});
   var Hi = F2(function (a,b) {    return {ctor: "Hi",_0: a,_1: b};});
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($AlbumEntry.view,A2($Signal.forwardTo,address,Hi(42)),model.topEntry)
              ,A2($AlbumEntry.view,A2($Signal.forwardTo,address,Lo(44)),model.bottomEntry)]));
   });
   var main = $StartApp$Simple.start({model: examples,update: update,view: view});
   var Model = F2(function (a,b) {    return {topEntry: a,bottomEntry: b};});
   return _elm.AlbumPair.values = {_op: _op,Model: Model,Hi: Hi,Lo: Lo,update: update,view: view,ex1: ex1,ex2: ex2,examples: examples,main: main};
};